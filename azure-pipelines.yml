# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# try again

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: HelloWorld
  displayName: Hello World
  jobs:
  - job: HelloWorld
    displayName: Hello World
    steps:
    - script: |
        echo 'Hello World'

- stage: tf_validate
  jobs:
  - job: tf_validate
    displayName: TF Validate
    steps:
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: '1.10.5'

      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: k21-devops
          backendAzureRmStorageAccountName: k21devops
          backendAzureRmContainerName: azure-devops
          backendAzureRmKey: terraform/terraform.tfstate
          backendAzureRmResourceGroupName: k21

      - script: |
          terraform --version

      - script: |
          cd terraform
          terraform validate

- stage: tf_plan
  jobs:
  - job: tf_plan
    displayName: TF Validate
    steps:
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: '1.10.5'

      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: k21-devops
          backendAzureRmStorageAccountName: k21devops
          backendAzureRmContainerName: azure-devops
          backendAzureRmKey: terraform/terraform.tfstate
          backendAzureRmResourceGroupName: k21
      - script: |
          cd terraform
          terraform init
          terraform plan
