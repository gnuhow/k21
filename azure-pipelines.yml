# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# try again

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
# - stage: HelloWorld
#   displayName: Hello World
#   jobs:
#   - job: HelloWorld
#     displayName: Hello World
#     steps:
#     - script: |
#         echo 'Hello World'

- stage: Terraform
  jobs:
  - job: Terraform
    displayName: Terraform
    steps:
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: $(TERRAFORM_VERSION)

      - task: TerraformTaskV4@4
        name: terraformInit
        displayName: Initialize terraform
        inputs:
          provider: azurerm
          command: init
          backendServiceArm: k21-devops
          backendAzureRmStorageAccountName: k21devops
          backendAzureRmContainerName: k21-devops
          backendAzureRmKey: 'terraform.tfstate'
          backendAzureRmResourceGroupName: k21
          workingDirectory: terraform

      - task: TerraformTaskV4@4
        name: terraformValidate
        displayName: Validate Terraform
        inputs:
          provider: azurerm
          command: validate
          workingDirectory: terraform
          # commandOptions: '-var test_var=$(TF_VAR_TEST_VAR)'

      # - script: |
      #     C='\033[0;33m'

      #     echo "TF_VAR_test_var: $(TF_VAR_TEST_VAR)"
      #     export TF_VAR_azure_subscription_id=$(echo -n "$(AZURE_SUBSCRIPTION_ID)")
      #     export TF_VAR_azure_tenant_id=$(echo -n "$(AZURE_TENANT_ID)")

      #     cd terraform
      #     terraform init

      #     echo -e "${C}terraform plan"
      #     terraform plan

      - task: TerraformTaskV4@4
        name: terraformPlan
        displayName: Terraform Plan
        inputs:
          provider: azurerm
          command: plan
          commandOptions: '-out main.tfplan -var azure_tenant_id=$(AZURE_TENANT_ID) -var azure_subscription_id=$(AZURE_SUBSCRIPTION_ID) -var test_var=$(TF_VAR_TEST_VAR)'
          environmentServiceNameAzureRM: k21-devops
          workingDirectory: terraform
 
      # Only runs if the 'terraformPlan' task has detected changes the in state. 
      # - task: TerraformTaskV4@4
      #   name: terraformApply
      #   displayName: Terraform Apply
      #   condition: and(succeeded(), eq(variables['terraformPlan.changesPresent'], 'true'))
      #   inputs:
      #     provider: azurerm
      #     command: apply
      #     commandOptions: main.tfplan
      #     environmentServiceNameAzureRM: k21-devops
      #     workingDirectory: terraform
