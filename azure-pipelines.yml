variables:
  color: '\033[0;33m'
  doTerraform: true
  doContainer: false
  appVersion: 'v1.00.89'

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Terraform
  condition: eq(variables['doTerraform'], true)
  variables:
    doDestroy: false
    logLevel: ERROR
    terraformVersion: '1.10.5'

  jobs:
  - job: Terraform
    displayName: Terraform
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: $(terraformVersion)

    - task: TerraformTaskV4@4
      name: terraformInit
      displayName: Initialize terraform
      env:
        TF_LOG: $(logLevel)
      inputs:
        provider: azurerm
        command: init
        backendServiceArm: k21-devops
        backendAzureRmStorageAccountName: k21devops
        backendAzureRmContainerName: tfstate
        backendAzureRmKey: terraform.tfstate
        backendAzureRmResourceGroupName: k21
        workingDirectory: terraform

    - task: TerraformTaskV4@4
      name: terraformValidate
      displayName: Validate Terraform
      inputs:
        provider: azurerm
        command: validate
        workingDirectory: terraform

    - task: TerraformTaskV4@4
      name: terraformPlan
      displayName: Terraform Plan
      condition: eq(variables['doDestroy'], false)
      inputs:
        provider: azurerm
        command: plan
        commandOptions: '-out main.tfplan -var app_container_url=$(APP_CONTAINER_URL) -var app_container_version=$(app_container_version)'
        environmentServiceNameAzureRM: k21-devops
        workingDirectory: terraform

    # Only runs if the 'terraformPlan' task has detected changes the in state.
    - task: TerraformTaskV4@4
      name: terraformApply
      displayName: Terraform Apply
      condition: and(succeeded(), eq(variables['terraformPlan.changesPresent'], 'true'), eq(variables['doDestroy'], false))
      env:
        TF_LOG: $(logLevel)
      inputs:
        provider: azurerm
        command: apply
        commandOptions: main.tfplan
        environmentServiceNameAzureRM: k21-devops
        workingDirectory: terraform

    - task: TerraformTaskV4@4
      name: terraformPlanDestroy
      displayName: Terraform Plan for Destruction
      condition: eq(variables['doDestroy'], true)
      inputs:
        provider: azurerm
        command: plan
        commandOptions: '-destroy -out main.tfplan'
        environmentServiceNameAzureRM: k21-devops
        workingDirectory: terraform

    - task: TerraformTaskV4@4
      name: terraformDestroy
      displayName: Terraform Destroy
      condition: and(succeeded(), eq(variables['doDestroy'], true))
      env:
        TF_LOG: $(logLevel)
      inputs:
        provider: azurerm
        command: apply
        commandOptions: main.tfplan
        environmentServiceNameAzureRM: k21-devops
        workingDirectory: terraform


- stage: Containers
  condition: eq(variables['doContainer'], true)
  jobs:
  - job: Containers
    displayName: Containers
    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: k21-registry

    - task: Docker@2
      displayName: Docker Build and Push
      inputs:
        repository: app
        containerRegistry: k21-registry
        command: buildAndPush
        tags: | # eg: v1.00.104
          $(appVersion)

    - task: Docker@2
      displayName: Logout
      inputs:
        command: logout
        containerRegistry: k21-registry